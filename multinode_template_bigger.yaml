heat_template_version: 2013-05-23

description: >
  HOT template to create a new neutron network plus a router to the public
  network, and for deploying two servers into the new network. The template also
  assigns floating IP addresses to each server so they are routable from the
  public network.
parameters:
  key_name1:
    type: string
    description: Name of keypair to assign to servers
  name_lin1:
    type: string
    description: Name of the instance
  name_lin2:
    type: string
    description: Name of the instance
  name_lin3:
    type: string
    description: Name of the instance
  name_lin4:
    type: string
    description: Name of the instance
  name_lin5:
    type: string
    description: Name of the instance
  image_lin:
    type: string
    description: Name of image to use for servers
  flavor_medium:
    type: string
    description: Flavor to use for servers
  flavor_small:
    type: string
    description: Flavor to use for servers
  public_net:
    type: string
    description: ID or name of public network for which floating IP addresses will be allocated
  private_net_name1:
    type: string
    description: Name of private network to be created
  private_net_cidr1:
    type: string
    description: Private network address (CIDR notation)
  private_net_gateway1:
    type: string
    description: Private network gateway address
  private_net_pool_start1:
    type: string
    description: Start of private network IP address allocation pool
  private_net_pool_end1:
    type: string
    description: End of private network IP address allocation pool
  private_net_name2:
    type: string
    description: Name of private network to be created
  private_net_cidr2:
    type: string
    description: Private network address (CIDR notation)
  private_net_gateway2:
    type: string
    description: Private network gateway address
  private_net_pool_start2:
    type: string
    description: Start of private network IP address allocation pool
  private_net_pool_end2:
    type: string
    description: End of private network IP address allocation pool
  sec_group_lin:
    type: comma_delimited_list
    description: Security group for linux
  sec_group_win:
    type: comma_delimited_list
    description: Security group for windows
  script_param:
    type: string
    description: bootscript param

resources:
  private_net1:
    type: OS::Neutron::Net
    properties:
      name: { get_param: private_net_name1 }

  private_subnet1:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: private_net1 }
      cidr: { get_param: private_net_cidr1 }
      gateway_ip: { get_param: private_net_gateway1 }
      allocation_pools:
        - start: { get_param: private_net_pool_start1 }
          end: { get_param: private_net_pool_end1 }
  
  private_net2:
    type: OS::Neutron::Net
    properties:
      name: { get_param: private_net_name2 }

  private_subnet2:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: private_net2 }
      cidr: { get_param: private_net_cidr2 }
      gateway_ip: { get_param: private_net_gateway2 }
      allocation_pools:
        - start: { get_param: private_net_pool_start2 }
          end: { get_param: private_net_pool_end2 }

  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: public_net }

  router_interface1:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: private_subnet1 }

  router_interface2:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: private_subnet2 }

  manager:
    type: OS::Nova::Server
    properties:
      name: { get_param: name_lin1 }
      image: { get_param: image_lin }
      flavor: { get_param: flavor_medium }
      key_name : { get_param: key_name1 }
      networks:
        - port: { get_resource: manager_port1 }
        - port: { get_resource: manager_port2 }
      user_data_format: RAW
      user_data:
        str_replace: 
          template: { get_file: manager.sh } 
          params: 
            param1: { get_param: script_param }

  manager_port1:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_net1 }
      security_groups: { get_param: sec_group_lin }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet1 }

  manager_port2:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_net2 }
      security_groups: { get_param: sec_group_lin }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet2 }

  manager_floating_ip1:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }
      port_id: { get_resource: manager_port1 }

  keystone:
    type: OS::Nova::Server
    properties:
      name: { get_param: name_lin2 }
      image: { get_param: image_lin }
      flavor: { get_param: flavor_medium }
      key_name: { get_param: key_name1 }
      networks:
        - port: { get_resource: keystone_port1 }
        - port: { get_resource: keystone_port2 }
      user_data_format: RAW
      user_data:
        str_replace:
          template: { get_file: node.sh }
          params:
            param1: { get_param: script_param }

  keystone_port1:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_net1 }
      security_groups: { get_param: sec_group_lin }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet1 }

  keystone_port2:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_net2 }
      security_groups: { get_param: sec_group_lin }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet2 }

  keystone_floating_ip1:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }
      port_id: { get_resource: keystone_port1 }

  nova:
    type: OS::Nova::Server
    properties:
      name: { get_param: name_lin3 }
      image: { get_param: image_lin }
      flavor: { get_param: flavor_medium }
      key_name: { get_param: key_name1 }
      networks:
        - port: { get_resource: nova_port1 }
        - port: { get_resource: nova_port2 }
      user_data_format: RAW
      user_data:
        str_replace:
          template: { get_file: node.sh }
          params:
            param1: { get_param: script_param }

  nova_port1:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_net1 }
      security_groups: { get_param: sec_group_lin }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet1 }

  nova_port2:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_net2 }
      security_groups: { get_param: sec_group_lin }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet2 }

  nova_floating_ip1:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }
      port_id: { get_resource: nova_port1 }

  glance:
    type: OS::Nova::Server
    properties:
      name: { get_param: name_lin4 }
      image: { get_param: image_lin }
      flavor: { get_param: flavor_medium }
      key_name: { get_param: key_name1 }
      networks:
        - port: { get_resource: glance_port1 }
        - port: { get_resource: glance_port2 }
      user_data_format: RAW
      user_data:
        str_replace:
          template: { get_file: node.sh }
          params:
            param1: { get_param: script_param }

  glance_port1:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_net1 }
      security_groups: { get_param: sec_group_lin }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet1 }

  glance_port2:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_net2 }
      security_groups: { get_param: sec_group_lin }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet2 }

  glance_floating_ip1:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }
      port_id: { get_resource: glance_port1 }

  neutron:
    type: OS::Nova::Server
    properties:
      name: { get_param: name_lin5 }
      image: { get_param: image_lin }
      flavor: { get_param: flavor_medium }
      key_name: { get_param: key_name1 }
      networks:
        - port: { get_resource: neutron_port1 }
        - port: { get_resource: neutron_port2 }
      user_data_format: RAW
      user_data:
        str_replace:
          template: { get_file: node.sh }
          params:
            param1: { get_param: script_param }

  neutron_port1:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_net1 }
      security_groups: { get_param: sec_group_lin }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet1 }

  neutron_port2:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_net2 }
      security_groups: { get_param: sec_group_lin }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet2 }

  neutron_floating_ip1:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }
      port_id: { get_resource: neutron_port1 }
